import { Emoji } from "./emoji";
import { Sponsor } from "./sponsor";

export interface Meta {
	maintainerName?: string;
	maintainerEmail?: string;
	version: string;
	name?: string;
	uri?: string;
	description?: string;
	sponsors: Sponsor;
	langs: string[];
	tosUrl?: string;
	secure: boolean;
	disableRegistration: boolean;
	disableLocalTimeline: boolean;
	disableGlobalTimeline: boolean;
	driveCapacityPerLocalUserMb: number;
	driveCapacityPerRemoteUserMb: number;
	cacheRemoteFiles: boolean;
	proxyRemoteFiles: boolean;
	enableHcaptcha: boolean;
	hcaptchaSiteKey?: string;
	enableRecaptcha: boolean;
	recaptchaSiteKey?: string;
	allowedEmojiReactions: string[];
	swPublickey?: string;
	maxNoteTextLength: 1000;
	emojis: Emoji[];
	requireSetup: boolean;
	enableEmail: boolean;
	enableTwitterIntegration: boolean;
	enableGithubIntegration: boolean;
	enableDiscordIntegration: boolean;
	enableServiceWorker: boolean;
	hcaptchaSecretKey?: string;
	recaptchaSecretKey?: string;
	proxyAccountId: string;
	twitterConsumerKey?: string;
	twitterConsumerSecret?: string;
	githubClientId?: string;
	githubClientSecret?: string;
	discordClientId?: string;
	discordClientSecret?: string;
	summalyProxy: string;
	email: string;
	smtpSecure: boolean;
	smtpHost: string;
	smtpPort: string;
	smtpUser: string;
	smtpPass: string;
	swPrivateKey: string;
	useObjectStorage: boolean;
	objectStorageBaseUrl: string;
	objectStorageBucket: string;
	objectStoragePrefix: string;
	objectStorageEndpoint: string;
	objectStorageRegion: string;
	objectStoragePort: string;
	objectStorageAccessKey: string;
	objectStorageSecretKey: string;
	objectStorageUseSSL: boolean;
	objectStorageUseProxy: boolean;
}
